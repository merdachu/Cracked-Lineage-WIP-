local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Arcane Lineage Script",
    LoadingTitle = "Cracked Lineage",
    LoadingSubtitle = "by Brainrot_",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = "cfgs", -- Create a custom folder for your hub/game
       FileName = "savedconfigs"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 local DebugTab = Window:CreateTab("Debug", nil)
 local MainTab = Window:CreateTab("Home", nil)
 local MiscTab = Window:CreateTab("Misc", nil)

 local ValuesSection = DebugTab:CreateSection("Values")
 local BoostsSection = MiscTab:CreateSection("Boosts")
 local InfoSection = MainTab:CreateSection("Info")
 local MainSection = MainTab:CreateSection("Main")

 Rayfield:Notify({
    Title = "Script executed! Lineage Cracked.",
    Content = "get humped Was.",
    Duration = 6.5,
    Image = nil,
    Actions = { -- Notification Buttons
       Ignore = {
          Name = "Sure",
          Callback = function()
          print("dummy closed the notif")
       end
    },
 },
 })

if MiscTab and MiscTab.CreateButton then
    local Button = MiscTab:CreateButton({
        Name = "Heal",
        Callback = function()
            -- Get the LocalPlayer object
            local player = game.Players.LocalPlayer

            -- Get the character
            local character = player.Character

            -- Check if the character exists
            if character then
                -- Get the character's humanoid root part
                local rootPart = character:FindFirstChild("HumanoidRootPart")

                -- Check if the humanoid root part exists
                if rootPart then
                    -- Set the target position
                    local targetPosition = Vector3.new(-244.9686737060547, 42.89403533935547, -3225.257080078125)

                    -- Create a TweenInfo object
                    local tweenInfo = TweenInfo.new(
                        1, -- Duration
                        Enum.EasingStyle.Linear -- Easing style
                    )

                    -- Create a Tween using the TweenService to teleport to the target position
                    local teleportTween = game:GetService("TweenService"):Create(rootPart, tweenInfo, {CFrame = CFrame.new(targetPosition)})

                    -- Play the teleport Tween
                    teleportTween:Play()
                end
            end
        end
    })
else
    warn("Failed to find the CreateButton method. Make sure the necessary library or module is loaded.")
end
